print('-----------------------------------------------------------------------------------------------------')
a=float(input())
b=float(input())
print(f'{a} + {b} = {a+b:.3f}')
print(f'{a} - {b} = {a-b:.3f}')
print(f'{a} * {b} = {a*b:.3f}')
print(f'{a} / {b} = {a/b:.3f}')

print('-----------------------------------------------------------------------------------------------------')
a =eval(input())
b =eval(input())
print(a*b)
print('-----------------------------------------------------------------------------------------------------')
def solve(a,b):  # 这是函数的定义，先不用理解，程序会执行缩进块的代码
    # 在下面输入你的代码，计算a和b的和、差和积并分三行输出
    print(a+b)
    print(a-b)
    print(a*b)

if __name__ == '__main__':
    a = int(input())  # 输入转为整数
    b = int(input())  # 输入转为整数
    solve(a,b)        # 调用定义的函数solve(a,b)，执行函数中的代码
print('-----------------------------------------------------------------------------------------------------')
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。
# 1 输出年月日，空格分隔，格式：2020 09 16

# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021 04 26

# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
# 此处去掉注释符号“#”并补充你的代码
print(f'{year} {month} {date}')
# =======================================================
print('-----------------------------------------------------------------------------------------------------')
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。

# 2 输出年-月-日，连字符“-”分隔，格式：2020-09-16
# 3 输出年/月/日，斜线“/”分隔，格式：2020/09/16
# 4 输出月，日，年，逗号“,”分隔，格式：09,16,2020


# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021-04-26
# 2021/04/26
# 04,26,2021

# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
# 此处去掉注释符号“#”并补充你的代码
print(year,month,date,sep='-')
print(year,month,date,sep='/')
print(month,date,year,sep=',')
# =======================================================
print('-----------------------------------------------------------------------------------------------------')
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。
# 5 用str.format()格式输出，格式：2020 年09 月16 日


# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021年04月26日
# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
# 此处去掉注释符号“#”并补充你的代码
print(f'{year}年{month}月{date}日')
# =======================================================
print('-----------------------------------------------------------------------------------------------------')
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。
# 6 用字符串拼接方法输出，格式：2020 年09 月16 日

# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021年04月26日
# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
# 此处去掉注释符号“#”并补充你的代码
print(year+'年'+month+'月'+date+'日')
# =======================================================
print('-----------------------------------------------------------------------------------------------------')
"""
编写程序，用户入自己的姓名，输出以下界面后，再在下一行输出“欢迎您，***同学！”
|++++++++++++++++++++++|
|                      |
|   Welcome to WHUT    |
|                      |
|++++++++++++++++++++++|
"""

my_name = input()  # 输入学生的姓名                             
########### Begin ############
# 输出以上界面
print('|++++++++++++++++++++++|')
print('|                      |')
print('|   Welcome to WHUT    |')
print('|                      |')
print('|++++++++++++++++++++++|')

# 输出“欢迎您，***同学！”
print(f'欢迎您，{my_name}同学！')
########### End ############
print('-----------------------------------------------------------------------------------------------------')
a =eval(input())
b=eval(input())
print(f'{a} + {b} = {a+b:.3f}')
print(f'{a} - {b} = {a-b:.3f}')
print(f'{a} * {b} = {a*b:.3f}')
print(f'{a} / {b} = {a/b:.3f}')
print('-----------------------------------------------------------------------------------------------------')
longth = eval(input())
width = eval(input())
print(longth*width)
print('-----------------------------------------------------------------------------------------------------')
def solve(a,b):
    # 在此处输入你的代码
    print(a+b)
    print(a-b)
    print(a * b)

if __name__ == '__main__':
    a = int(input())  # 输入转为整数
    b = int(input())  # 输入转为整数
    solve(a,b)        # 调用你定义的函数进行数学运算
print('-----------------------------------------------------------------------------------------------------')
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。
# 1 输出年月日，空格分隔，格式：2020 09 16

# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021 04 26

# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
# 此处去掉注释符号“#”并补充你的代码
print(f'{year} {month} {date}')
# =======================================================
print('-----------------------------------------------------------------------------------------------------')
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。

# 2 输出年-月-日，连字符“-”分隔，格式：2020-09-16
# 3 输出年/月/日，斜线“/”分隔，格式：2020/09/16
# 4 输出月，日，年，逗号“,”分隔，格式：09,16,2020


# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021-04-26
# 2021/04/26
# 04,26,2021

# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
# 此处去掉注释符号“#”并补充你的代码
print(year,month,date,sep='-')
print(year,month,date,sep='/')
print(month,date,year,sep=',')
# =======================================================
print('-----------------------------------------------------------------------------------------------------')
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。
# 5 用str.format()格式输出，格式：2020 年09 月16 日


# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021年04月26日
# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
# 此处去掉注释符号“#”并补充你的代码
print(f'{year}年{month}月{date}日')
# =======================================================
print('-----------------------------------------------------------------------------------------------------')
# 实验要求
# 在三行中分别输入当前的年、月、日的整数值，按要求完成输出。
# 6 用字符串拼接方法输出，格式：2020 年09 月16 日

# 测试数据
# 输入(>>>开头的行表示输入数据)
# >>>2021
# >>>04
# >>>26

# 输出
# 2021年04月26日
# 以下为代码区

# =======================================================
year = input()                         # 输入当前年
month = input()                        # 输入当前月
date = input()                         # 输入当前日
# =======================================================
# 此处去掉注释符号“#”并补充你的代码
print(year+'年'+month+'月'+date+'日')
# =======================================================
print('-----------------------------------------------------------------------------------------------------')
"""
试编程实现分两行输入两个非零整数，并在4 行中按顺序输出两个数的加、减、乘、除的计算结果。
要求输出与如下示例格式相同，符号前后各有一个空格。
"""

#输入整数变量a和b，定义输入函数
##############Begin##################
a = int(input())
b = int(input())
##############End####################

#a和b之间进行四则运算并输出
##############Begin##################
print(f'{a} + {b} = {a + b}')
print(f'{a} - {b} = {a-b}')
print(f'{a} * {b} = {a*b}')
print(f'{a} / {b} = {a/b}')


##############End####################
print('-----------------------------------------------------------------------------------------------------')
'''
试编程实现分两行输入两个非零浮点数，并在4 行中按顺序输出两个数的加、减、乘、除的计算式和计算结果。计算结果str.format()方法保留小数点后3位数字。要求输出与如下示例格式相同，符号前后各有一个空格。
'''

#输入浮点型变量a和b，定义输入函数
#############Begin##############
a = float(input())
b = float(input())
#############End################

#a和b之间进行四则运算并输出
#############Begin################
print(f'{a} + {b} = {a + b:.3f}')
print(f'{a} - {b} = {a - b:.3f}')
print(f'{a} * {b} = {a * b:.3f}')
print(f'{a} / {b} = {a / b:.3f}')
#############End################
print('-----------------------------------------------------------------------------------------------------')
a = int(input('请输入一个整数：'))    
b = int(input('请再输入一个整数：')) 
sign = input('请输入运算符号')
###################Begin##################################
# eval()函数把字符串f"{a}{sign}{b}"转为计算表达式
# 字符串里包含引号时，内部引号与边界应用不同的引号
print(f"{a}{sign}{b}={eval(f'{a}{sign}{b}')}")

###################End##################################
print('-----------------------------------------------------------------------------------------------------')
import random
random.seed(0)
def calculator(n, maximum):
    """随机产生n道正整数四则运算的题目,用户输入计算结果，
    判断输入正确与否,并统计正确率。题目保证减法不出现负数."""
    correct = 0
    for i in range(n):  # 循环n次，每次产生一个新问题
        b = random.randint(0, maximum)  # 随机产生一个maximum以内整数
        a = random.randint(b, maximum)  # 随机产生一个b到maximum以内整数，避免减法出现负数
        sign = random.choice('+-*/')
        #################Begin##############################
        print(f'{a}{sign}{b}=',end='')
        result = float(input())
        if result == eval(f"{a}{sign}{b}"):
            correct += 1
            print('恭喜你，回答正确')
        else:
            print('回答错误，你要加油哦！')




        #################End##############################
    print(f'答对{correct}题，正确率为{correct / n * 100}%')

if __name__ == '__main__':
    num = int(input('请输入出题数量：'))
    m = int(input('请输入参与计算的最大数字：'))
    calculator(num, m)
print('-----------------------------------------------------------------------------------------------------')
#4

tuition_per_credit = int(input('请输入每学分学费金额：')) #每学分缴费金额
total_credits = 17 #总学分
total_tuition = total_credits * tuition_per_credit
living_expenses = int(input('请输入你每个月生活费：'))
total_cost = living_expenses * 5 + total_tuition
student_loan = total_cost * 0.6
print(f'本学期你能够贷款{student_loan:.2f}元')
print('-----------------------------------------------------------------------------------------------------')
#5
AB = float(input())
CD = float(input())
AD=AB/2
OA = (AD*AD+CD*CD)/(2*CD)
print(f'{OA:.2f}')
print('-----------------------------------------------------------------------------------------------------')
#6
import math
π =math.pi
AB = float(input())
CD = float(input())
AD=AB/2
OA = (AD*AD+CD*CD)/(2*CD)
x=math.asin(AD/OA)
AOB=2*x
sector=AOB/(2*π)*π*OA*OA
triangle=1/2*OA*OA*math.sin(AOB)
arch=sector-triangle
print(f'{arch:.2f}')
print('-----------------------------------------------------------------------------------------------------')
#7 将代码填写完整


import math


radius = 6371 * 1000
# 1. 计算地球表面积（表面积公式S = 4πR2）
surface_area = 4*math.pi * radius * radius
print(f'地球表面积为{surface_area:.2f}平方米')

# 2. 计算地球体积（体积公式是V = 4πR3/3）
volume =4*math.pi*radius * radius * radius/3
print(f'地球体积为{volume:.2f}立方米')

# 3. 计算地球赤道的周长（圆周长公式是L = 2πR）
circumference = 2*math.pi*radius
print(f'地球赤道周长为{circumference:.2f}米')
# 4.计算绳子与地球之间的空隙大小
new_radius = (circumference +1)/(2*math.pi)
gap = new_radius -radius
print(f'空隙大小为{gap:.2f}米')

# 5.判断老鼠是否可以从空隙中钻过
if gap>0.1:
    print('老鼠可以从空隙中钻过')
else :
    print('老鼠无法通过空隙')
print('-----------------------------------------------------------------------------------------------------')
#8
h =int(input())
m =int(input())
s =int(input())
print(f'{h:02}:{m:02}:{s:02}')
rest = 86400-h*3600-m*60-s
print(f'距离午夜还剩余{rest}秒')
print('-----------------------------------------------------------------------------------------------------')
# 请补充你的代码
a =float(input('请输入您的体重（公斤）：'))
b=float(input('请输入您的身高（米）：'))
BMI = a/(b**2)
print(f'您的BMI值为：{BMI:.2f}')
if BMI < 18.5:
    print('体重过轻')
elif 18.5 <= BMI < 24.9:
    print('体重正常')
elif 25 <= BMI < 29.9: 
    print('体重超重')
else :
    print('肥胖')
print('-----------------------------------------------------------------------------------------------------')
# 在下面空行输入一个符号
a=input()
for poet in ['李白', '王维', '王勃', '白居易', '杜甫']:
    # 在下一行对齐此位置写输出语句，加参数使输出时不换行，每个输出后用第2行输入的符号结尾
    print(poet,end=a)
print('-----------------------------------------------------------------------------------------------------')
# 以下三行代码不要修改
a = int(input('请输入一个整数：'))    
b = int(input('请再输入一个整数：')) 
sign = input('请输入运算符号')
# 补充你的代码
# eval()函数把字符串f"{a}{sign}{b}"转为计算表达式
# 字符串里包含引号时，内部引号与边界应用不同的引号

print(f"{a}{sign}{b}={eval('{}{}{}'.format(a,sign,b))}")
